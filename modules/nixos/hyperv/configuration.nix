{ config, pkgs, lib, ... }:

let
  cfg = config.modules.systemConfig;
in
{
  imports = [
    ../common.nix
  ];
  config = {

    # TODO: this is generated by nixos-generate-config, figure out if there is a module that can handle this during build time
    boot.initrd.availableKernelModules = [
      "ata_piix"
      "mptspi"
      "uhci_hcd"
      "ehci_pci"
      "sd_mod"
      "sr_mod"
    ];
    boot.initrd.kernelModules = [ ];
    boot.kernelModules = [ ];
    boot.extraModulePackages = [ ];

    fileSystems."/" =
      {
        device = "/dev/disk/by-label/nixos";
        fsType = "ext4";
      };

    fileSystems."/boot" =
      {
        device = "/dev/disk/by-label/boot";
        fsType = "vfat";
      };

    swapDevices = [ ];

    hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
    # end of generated hardwre

    # Be careful updating this.
    boot.kernelPackages = pkgs.linuxPackages_latest;

    # Use the systemd-boot EFI boot loader.
    boot.loader.systemd-boot.enable = true;
    boot.loader.efi.canTouchEfiVariables = true;

    virtualisation.hypervGuest.enable = true;
    virtualisation.hypervGuest.videoMode = "1920x1080"; # Hyperv doesn't support hidpi natively

    # Interface is this on Intel Hyper-V
    networking.interfaces.eth0.useDHCP = true;
    nixpkgs.config.allowUnfree = true;

    hardware.video.hidpi.enable = true;

    users.users.gdm.extraGroups = [ "video" ];
    users.users.${cfg.user}.extraGroups = [ "video" ];
    services.xserver = {
      enable = true;
      layout = "us";
      dpi = 220;

      desktopManager = {
        xterm.enable = false;
        wallpaper.mode = "fill";
      };

      displayManager = {
        defaultSession = "none+i3";
        lightdm.enable = false;
        gdm.enable = true;

      };

      windowManager = {
        i3.enable = true;
      };
    };

    services.openssh.enable = true;
    services.openssh.passwordAuthentication = true;
    services.openssh.permitRootLogin = "no";

    # xrdp until I fugure out how to hyperv enchanced session works
    services.xrdp.enable = true;
    services.xrdp.defaultWindowManager = "${pkgs.i3}/bin/i3";
  };
}
